install.packages ('tidyverse')
library (tidyverse)
install.packages ('janitor')
library (janitor)
install.packages ('lubricate')
library (lubricate) 
library (ggplot2)
install.packages ('scales')
library (scales)
install.packages("ggrepel")
library(ggrepel)

#loading data sets
tripdata_202201 <- read.csv("202201-divvy-tripdata.csv")
tripdata_202202 <- read.csv("202202-divvy-tripdata.csv")
tripdata_202203 <- read.csv("202203-divvy-tripdata.csv")
tripdata_202204 <- read.csv("202204-divvy-tripdata.csv")
tripdata_202205 <- read.csv("202205-divvy-tripdata.csv")
tripdata_202206 <- read.csv("202206-divvy-tripdata.csv")
tripdata_202207 <- read.csv("202207-divvy-tripdata.csv")
tripdata_202208 <- read.csv("202208-divvy-tripdata.csv")
tripdata_202209 <- read.csv("202209-divvy-publictripdata.csv")
tripdata_2022010 <- read.csv("202210-divvy-tripdata.csv")
tripdata_2022011 <- read.csv("202211-divvy-tripdata.csv")
tripdata_2022012 <- read.csv("202212-divvy-tripdata.csv")

# Checking invidual data sets
str(tripdata_202201)
str(tripdata_202202)
str(tripdata_202203)
str(tripdata_202204)
str(tripdata_202205)
str(tripdata_202206)
str(tripdata_202207)
str(tripdata_202208)
str(tripdata_202209)
str(tripdata_2022010)
str(tripdata_2022011)
str(tripdata_2022012)

# Confirming Number of Rows Individually
rowtotal <- sum(
  nrow(tripdata_202201),
  nrow(tripdata_202202), 
  nrow(tripdata_202203), 
  nrow(tripdata_202204), 
  nrow(tripdata_202205), 
  nrow(tripdata_202206), 
  nrow(tripdata_202207), 
  nrow(tripdata_202208),
  nrow(tripdata_202209), 
  nrow(tripdata_2022010),
  nrow(tripdata_2022011), 
  nrow(tripdata_2022012))

print(rowtotal)

# Combining All Data Togetherr
tripdata_2022 <- rbind(tripdata_202201, tripdata_202202, tripdata_202203, tripdata_202204, tripdata_202205, tripdata_202206, tripdata_202207, tripdata_202208, tripdata_202209, tripdata_2022010, tripdata_2022011, tripdata_2022012)

# Total Number of Rows Combined
print(nrow(tripdata_2022))

# Examine Combined Data Set
str(tripdata_2022)
head(tripdata_2022)

## Data Cleaning

# Adding Date/Time(Day of the Week) Columns
tripdata_2022$date <- as.Date(tripdata_2022$started_at)
tripdata_2022$month <- format(as.Date(tripdata_2022$date), "%b")
tripdata_2022$day <- format(as.Date(tripdata_2022$date), "%d")
tripdata_2022$year <- format(as.Date(tripdata_2022$date), "%Y")
tripdata_2022$day_of_week <- format(as.Date(tripdata_2022$date), "%A")
head(tripdata_2022)

# Removing NA's
tripdata_2022_v2 <- drop_na(tripdata_2022)
tripdata_2022_v3 <- drop_na(tripdata_2022_v3)

# Removing Duplicates
tripdata_2022_no_duplicates <- tripdata_2022_v2[!duplicated(tripdata_2022$ride_id), ]
print(paste("Removed", nrow(tripdata_2022) - nrow(tripdata_2022_no_duplicates), "duplicate rows"))

## Data Manipulation

# Creating Ride Length Column
tripdata_2022_v2 <- mutate(tripdata_2022_no_duplicates, ride_length = difftime(ended_at, started_at, units = "mins"))
str(tripdata_2022_v2)

# Filtering Out Rides Less than 0
nrow(tripdata_2022_v2[tripdata_2022_v2$ride_length < 0,])
tripdata_2022_v3 <- tripdata_2022_v2[!tripdata_2022_v2$ride_length <0,]
glimpse(tripdata_2022_v3)

# Casual vs. Members
rider_type_total <- table(tripdata_2022_v3$member_casual)
View(rider_type_total)

## Statistical Analysis

trip_stats <- tripdata_2022_v3 %>% 
  group_by(member_casual) %>% 
  summarise(average_ride_length = mean(ride_length), standard_deviation = sd(ride_length), median_ride_length = median(ride_length), min_ride_length = min(ride_length), max_ride_length = max(ride_length))
head(trip_stats)

# Casual vs. Member Stats
trip_stats <- tripdata_2022_v3 %>% 
  group_by(member_casual) %>% 
  summarise(average_ride_length = mean(ride_length), standard_deviation = sd(ride_length), median_ride_length = median(ride_length), min_ride_length = min(ride_length), max_ride_length = max(ride_length))
head(trip_stats)

# Mode for day of the Week (mode forumla off tutorialspoint.com)
getmode <- function(v) {
  uniqv <- unique(v)
  uniqv[which.max(tabulate(match(v, uniqv)))]
}

weekday_mode <- getmode(tripdata_2022_v3$day_of_week)
print(weekday_mode)

# Most Popular Day by Rider Type
tripdata_2022_v3$day_of_week <- ordered(tripdata_2022_v3$day_of_week, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))

tripdata_2022_v3 %>% 
  group_by(member_casual, day_of_week) %>% 
  summarise(rider_type_total = n(), average_ride_length = mean(ride_length)) %>% 
  arrange(member_casual, day_of_week)

# Most Popular Month
popular_month <- tripdata_2022_v3 %>% 
  group_by(month) %>% 
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>% 
  arrange(-number_of_rides)

View(popular_month)

# Most Popular Start Station
station_mode <- getmode(tripdata_2022_v3$start_station_name)
head(station_mode) 

station_mode <- mode(tripdata_2022_v3$start_station_name)
view(station_mode)

# Most Popuar Start Station for Members
popular_start_stations_member <- tripdata_2022_v3 %>% 
  filter(member_casual == 'member') %>% 
  group_by(start_station_name) %>% 
  summarise(number_of_starts = n()) %>% 
  filter(start_station_name != "") %>% 
  arrange(- number_of_starts)

head(popular_start_stations_member)

# Most Popular Start Station for Casuals
popular_start_stations_casual <- tripdata_2022_v3 %>% 
  filter(member_casual == 'casual') %>% 
  group_by(start_station_name) %>% 
  summarise(number_of_starts = n()) %>% 
  filter(start_station_name != "") %>% 
  arrange(- number_of_starts)

head(popular_start_stations_casual)

## Visualizations

# Round Visual x/y Axis
options(scipen=999)

# Rider Types
tripdata_2022_v3 %>% 
  group_by(member_casual) %>% 
  summarise(total_rider_type = n()) %>% 
  ggplot(aes(x = member_casual, y = total_rider_type, fill = member_casual)) + 
  geom_col(position = "dodge") + 
  labs(y = "Total Rides", x = "User Type")+
  geom_label_repel(aes(label = scales::comma(total_rider_type)))+
  labs(fill = "User Type") 


# Rider Types and Durations
rider_type_average_duration <- tripdata_2022_v3 %>% 
  group_by(member_casual) %>% 
  summarize(average_ride_length = mean(ride_length))

rider_type_average_duration %>% 
  ggplot(aes(x = member_casual, y = average_ride_length, fill = member_casual)) +
  geom_col(position = "dodge") + geom_text(aes(label = average_ride_length, vjust = -0.25)) +
  labs(y = "Average Ride Time", x = "User Type")+
  labs(fill = "User Type") 

# Usage of Casual/Members by the Weekday
tripdata_2022_v3 %>% 
  group_by(member_casual, day_of_week) %>% 
  summarise(number_of_rides = n(),average_duration = mean(ride_length)) %>% 
  arrange(member_casual, day_of_week)  %>% 
  ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge")+
  labs(y = "Average Ride Time", x = "Day of the Week")+
  labs(fill = "User Type") +
  geom_text(aes(label = average_duration, angle = 90)) +


# Number of Trips by Casual/Members by Weekday
tripdata_2022_v3$day_of_week <- ordered(tripdata_2022_v3$day_of_week, levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))

tripdata_2022_v3 %>% 
  group_by(member_casual, day_of_week) %>% 
  summarise(number_of_rides = n(),average_duration = mean(ride_length)) %>% 
  arrange(member_casual, day_of_week)  %>% 
  ggplot(aes(x = day_of_week, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge")+
  labs(y = "Number of Rides", x = "Day of the Week")+
  labs(fill = "User Type") +
  geom_label_repel(aes(label = scales::comma(number_of_rides)))

# Usage of Casual/Members by Month
tripdata_2022_v3$month <- ordered(tripdata_2022_v3$month, levels=c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))

tripdata_2022_v3 %>% 
  group_by(member_casual, month) %>% 
  summarise(number_of_rides = n(),average_duration = mean(ride_length) ) %>% 
  arrange(member_casual, month)  %>% 
  ggplot(aes(x = month, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge") +
  labs(y = "Average Ride Time", x = "Month") +
  labs(fill = "User Type") +
  geom_label_repel(aes(label = scales::comma(number_of_rides)))+
  facet_wrap(~member_casual)

# Number of Casual/Member Rides by Month
tripdata_2022_v3 %>% 
  group_by(member_casual, month) %>% 
  summarise(number_of_rides = n()) %>% 
  arrange(member_casual, month)  %>% 
  ggplot(aes(x = month, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge") +
  geom_label_repel(aes(label = scales::comma(number_of_rides)))+
  labs(y = "Total Rides", x = "Month") +
  labs(fill = "User Type") +
  facet_wrap(~member_casual)
